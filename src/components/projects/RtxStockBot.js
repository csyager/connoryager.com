import rtx3070Image from '../../images/projects/rtx3070.png';
import { library } from '@fortawesome/fontawesome-svg-core';
import {
    faGithub
  } from '@fortawesome/free-brands-svg-icons';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';

library.add(faGithub);

function RtxStockBotProject() {
    return (
        <div className="post-content">
            <h1 className="display-4">Graphics Card Stock Bot</h1>
            <h5 className="text-muted">Apr 25, 2021</h5><br />
            <p><FontAwesomeIcon icon={faGithub} /> This project is on Github!  Click <a href="https://github.com/csyager/rtx-stock-bot" target="_blank" rel="noreferrer">here</a> to view!</p>
            
            <div className="post-header-img">
                <a href={rtx3070Image}><img src={rtx3070Image} alt="Nvidia RTX 3070" className="img-fluid" /></a>
            </div>

            <p className="post-body">Like many others in recent months, I was interested in purchasing one of Nvidia's new 3000 series graphics cards.  One of my quarantine projects was to build my first gaming PC, and one of the necessary components is a graphics card, which specializes in rendering images on the screen.  What I didn't know, and have since come to learn, is that demand for these cards is outrageously high, due to high demand from gamers during the COVID-19 pandemic coupled with even higher demand by cryptocurrency miners.  Graphics cards are designed to perform vector calculations, which are akin to matrix operations in mathematics, much more efficiently than standard CPUs, which is why they have become increasingly required by gaming titles aiming for high-end graphics (your computer screen is essentially a giant matrix of pixel values).  Interestingly, this is the same type of computing done to solve cryptocurrency hashes, the principle method of mining those currencies.  Coupled with the high value of cryptocurrencies in recent years, the graphics cards being offered by Nvidia can essentially cover the MSRP value relatively quickly by being used to mine cryptocurrencies, meaning that miners can essentially use them to print money, leading to high demand vs. supply.  I took a single microeconomics course in college, but it doesn't take an economist to know that low supply and high demand means scalpers can have a field day buying up these cards and selling them at highly inflated rates, often over 200% MSRP.</p>
            <p>So, after buying and assembling all of the parts for my new PC, I was essentially left with a very expensive, very RGB-oriented paperweight.  After a few days of mindlessly clicking refresh on sites offering limited stock drops of the new graphics cards, I realized that I'm a programmer and automating mindless tasks is kinda what I do.  So I got to work writing a script that would hopefully give me the leg up on the scalpers, who were utilizing their own scripts to buy up all of the stock anyways.  As a matter of principle (and an underlying fear that I would end up buying a card I couldn't afford by mistake), I deliberately did not configure this script to purchase any cards it found, instead going the route of notifying me that one had been found as quickly as possible.</p>
            <p>This script utilizes the BeautifulSoup Python library, which is a super cool, super easy-to-use web scraping library that I had used before to scrape data like stock prices and sports stats off the internet.  The idea behind the scraping is simple:  send a request to a web-server, which is returned as a big HTML document.  Then, use BeautifulSoup's tooling to find the HTML tags I'm interested in and parse the data contained therein to either do something (if it shows stock is available) or do nothing.  I wrote such scripts for three sites offering the products I wanted, threaded them to run in parallel, and then ran each thread every 15 seconds.</p>
            <p>The next question was what to do when I found stock.  The stock situation was so bad at the time (and maybe it still is) that stores would only drop a few cards at a time, and you had usually less than 30 seconds to get all the way through the add to cart and checkout process before it would be gone.  So every second counts.  I decided that the best thing I could do would be to first alert myself as quickly as possible that stock was dropping, and then hand myself a link to the product page so I could go straight there.  I developed this script on macOS, which has a pretty cool built-in command-line operation <code className="inline">say</code> that will verbally speak through the system speakers in the voice of Siri.  So the first thing my script does if it finds stock is run the <code className="inline">say "stock found at [insert retailer's name here]</code> command, verbally alerting me to which retailer currently has stock.  Of course, I'm not always sitting at my computer, so I wanted a way to alert myself wherever I might be that the stock had dropped.  For this, I used Amazon's Simple Notification Service (SNS), which sends custom SMS messages to phone numbers provided.  So the next thing I would do is text myself a link to the product page, so I could quickly navigate to it and add the product to my cart.</p>
            <p>Obviously there are better scripts out there for finding stock.  Many people searching for these cards joined Discord channels and followed Twitter pages powered by these scripts, so they could receive realtime alerts as well, and of course there are people running scripts that actually buy the product programmatically.  While I probably couldn't beat the latter, I figured that the former stock-hunters would be waiting on not only the latency of the scripts searching for stock, but also the latency of the scripts publishing the alerts to the various channels they were subscribed to, so I figure my stock script would give me the leg up on at least somebody, and that's good enough for me.  A couple of my friends were also searching for stock, so I edited the script to take a list of phone numbers, so everyone would get a text notification if any surprise drops came out.  Ultimately, it did help me find stock of a card (though I won't say anything about how much I paid for it), and it gave me some peace of mind that I didn't need to be constantly refreshing sites in hopes of finding one.  It was a fun project, and if you're interested in giving it a whirl head to the Github repo linked above and maybe it can help you too.</p>
        </div>
    );
}

export default RtxStockBotProject;